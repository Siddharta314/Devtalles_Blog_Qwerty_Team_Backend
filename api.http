@baseUrl = http://localhost:8000/api

### Tokens created by fake users from seed.py
@user_token = 
@admin_token = 
######################## LOGIN  user and admin  ########################
### ✅ Login como admin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@devtalles.com",
  "password": "admin123"
}

### ✅ Login como usuario normal (Carlos)
POST  {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "carlos@devtalles.com",
  "password": "carlos123"
}


########################### POST  ###########################
### ✅ Obtener posts públicos (lista con paginación) 
GET  {{baseUrl}}/posts?skip=0&limit=10
Authorization: Bearer {{admin_token}}

### ✅ Obtener un post específico por ID
GET {{baseUrl}}/posts/


### ✅ Crear un nuevo post (usar token de admin o usuario normal en Authorization)
POST  {{baseUrl}}/posts
Content-Type: application/json
Authorization: Bearer {{user_token}}

{
  "title": "Nuevo post de usuario de discord",
  "description": "Contenido de prueba creado desde REST Client DISCORD ",
  "content": "Este es el contenido del post de prueba. Aquí va el texto completo del post.",
  "category_id": 1,
  "tags": ["testing", "fastapi"]
}

### ✅ Actualizar un post existente
PUT {{baseUrl}}/posts/8
Content-Type: application/json
Authorization: Bearer {{user_token}}

{
  "title": "Post actualizado",
  "description": "Descripción editada",
  "content": "Este es el contenido actualizado del post",
  "category_id": 2,
  "tags": ["fastapi", "update"]
}

### ✅ Eliminar un post existente
DELETE {{baseUrl}}/posts/8
Authorization: Bearer {{user_token}}

########################### COMMENT  ###########################
### Crear comentario en un post
POST {{baseUrl}}/comments
Content-Type: application/json
Authorization: Bearer {{user_token}}

{
  "post_id": 1,
  "content": "Este es un comentario de prueba desde REST Client"
}


########################### LIKE  ###########################
### Dar like a un post (toggle)
POST {{baseUrl}}/likes/toggle
Content-Type: application/json
Authorization: Bearer {{user_token}}

{
  "post_id": 1
}

### Stat de un post  con token (user_has_liked)
GET  {{baseUrl}}/likes/post/1/stats
Content-Type: application/json
Authorization: Bearer {{user_token}}

{
  "post_id": 1
}

### Stat de un post 
GET  {{baseUrl}}/likes/post/1
Content-Type: application/json

{
  "post_id": 1
}


########################### TAGS  ###########################




GET {{baseUrl}}/auth/me
Authorization: Bearer {{user_token}}
